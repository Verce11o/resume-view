openapi: 3.0.3
info:
  title: Employees API
  description: API for employees
  version: 1.0.0
servers:
  - url: http://localhost:3009/api/v1

paths:
  /auth/signin:
    post:
      operationId: SignIn
      summary: Sign In as an employee
      description: Signs in as an employee with id
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "eef99b1e-4164-4354-a49d-29c7bde2813c"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInEmployee'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: invalid id

  /employee:
    post:
      operationId: CreateEmployee
      summary: Create employee
      description: Creates employee with corresponding position
      tags:
        - employees
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployee'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

    get:
      operationId: GetEmployeeList
      summary: Get employee list
      description: Gets all employees
      tags:
        - employees
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: Pagination cursor for next page
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Employee"

  /employee/{id}:
    get:
      summary: Get employee by id
      operationId: GetEmployeeByID
      tags:
        - employees
      parameters:
        - name: id
          in: path
          schema:
            type: string
          description: Employee ID
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: employee not found

    put:
      tags:
        - employees
      summary: Update employee by id
      operationId: UpdateEmployeeByID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          description: Employee ID
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEmployee"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: employee not found

    delete:
      tags:
        - employees
      summary: Delete employee by id
      operationId: DeleteEmployeeByID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          description: Employee ID
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: employee not found

  /position:
    post:
      operationId: CreatePosition
      summary: Create position
      description: Creates position
      tags:
        - position
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePosition'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'

    get:
      operationId: GetPositionList
      summary: Get position list
      description: Gets all positions
      tags:
        - position
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: Pagination cursor for next page
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Position"

  /position/{id}:
    get:
      operationId: GetPositionByID
      summary: Get position by id
      description: Gets position
      tags:
        - position
      parameters:
        - name: id
          in: path
          schema:
            type: string
          description: ID of the position
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: position not found

    put:
      operationId: UpdatePositionByID
      summary: Update position by id
      description: Updates a position with given details
      tags:
        - position
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          description: ID of the position
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePosition'
      responses:
        '200':
          description: Position updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        '404':
          description: Position not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: position not found

    delete:
      operationId: DeletePositionByID
      summary: Delete position by id
      description: Deletes a position by ID
      tags:
        - position
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          description: ID of the position to be deleted
          required: true
      responses:
        '200':
          description: Position deleted successfully
        '404':
          description: Position not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: position not found

components:
  securitySchemes:
    BearerAuth:
      in: header
      name: Authorization
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SignInEmployee:
      type: object
      properties:
        id:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - id

    CreateEmployee:
      type: object
      properties:
        first_name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        last_name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        position_name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        salary:
          type: integer
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - first_name
        - last_name
        - position_name
        - salary

    UpdateEmployee:
      type: object
      properties:
        first_name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        last_name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        position_id:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - first_name
        - last_name
        - position_id

    CreatePosition:
      type: object
      properties:
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        salary:
          type: integer
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - name
        - salary

    UpdatePosition:
      type: object
      properties:
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        salary:
          type: integer
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - name
        - salary

    Employee:
      type: object
      properties:
        id:
          type: string
          description: ID of employee
        first_name:
          type: string
          description: Employee first name
        last_name:
          type: string
          description: Employee last name
        position_id:
          type: string
          description: Employee position id

    Position:
      type: object
      properties:
        id:
          type: string
          description: ID of position
        name:
          type: string
          description: Position name
        salary:
          type: integer
          description: Position salary
