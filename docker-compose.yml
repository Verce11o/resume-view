version: '3.8'
services:

  resume-view:
    build:
      context: .
      dockerfile: resume-view/Dockerfile

    env_file:
      - resume-view/.env

    image: resume-view:latest

    ports:
      - "3007:3007"

    depends_on:
      - postgres
      - jaeger

    environment:
      WAIT_HOSTS: postgres:5432, jaeger:4317

    networks:
      - backend-network

  echo-service:
    build:
      context: .
      dockerfile: echo-service/Dockerfile

    environment:
      - "VIEW_SERVICE_ENDPOINT=resume-view:3007"
      - "CLIENT_TIMEOUT=5s"
      - "RETRIES_COUNT=3"
      - "SERVER_PORT:3008"
      - "LOG_LEVEL=DEBUG"

    image: echo-service:latest

    ports:
      - "3008:3008"

    depends_on:
      - resume-view

    networks:
      - backend-network

  employee-service:
    build:
      context: .
      dockerfile: employee-service/Dockerfile

    image: employee-service:latest

    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=vercello"
      - "POSTGRES_HOST=postgres"
      - "POSTGRES_DB=resume-views"
      - "POSTGRES_SSL_MODE=disable"

      - "MONGO_HOST=mongo"
      - "MONGO_PORT=27017"
      - "MONGO_DB=employees"
      - "MONGO_REPLICA_SET=rs0"

      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"

      - "MAIN_DATABASE=postgres"
      - "LOG_LEVEL=INFO"
      - "SERVER_PORT=:3009"
      - "WAIT_HOSTS=postgres:5432,mongo:27017"

    ports:
      - "3009:3009"

    depends_on:
      - postgres
      - mongo

    networks:
      - backend-network

  postgres:
    container_name: resume-view_postgres
    image: postgres:latest

    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=vercello"
      - "POSTGRES_DB=resume-views"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-network

    healthcheck:
      test: pg_isready -U postgres -d resume-views
      interval: 10s
      timeout: 3s
      retries: 5

  migrate:
    image: migrate/migrate
    networks:
      - backend-network
    command: [ "-path", "migrations", "-database",  "postgres://postgres:vercello@postgres:5432/resume-views?sslmode=disable", "up" ]
    depends_on:
      - postgres
    volumes:
      - migrations:/migrations

  mongo:
    image: mongo:latest
    container_name: resume-view_mongodb
    environment:
      MONGO_APP_DATABASE: employees
      MONGO_REPLICA_HOST: host.docker.internal
      MONGO_REPLICA_PORT: 27018
    entrypoint: >
      /bin/bash -c '
      echo "rs.initiate()" > /docker-entrypoint-initdb.d/1-init-replicaset.js &&
      /usr/local/bin/docker-entrypoint.sh mongod --replSet rs0 --bind_ip_all --noauth' "'MONGO_APP_DATABASE'" "'init'" "'db initialized successfully'"
    expose:
      - 27017
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend-network

  redis:
    image: redis:latest
    container_name: resume-view_redis
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - backend-network



  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks:
      - backend-network


volumes:
  pgdata:
  mongo_data:
  mongo_config:
  redis:
  migrations:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: 'migrations'

networks:
  backend-network:
    driver: bridge